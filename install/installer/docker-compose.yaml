#
# USAGE: docker-compose run app
# (need interactive interaction with script)

version: "2.4"

services:
  app: &app
    build:
      context: .
      args:
        ENV: dev
    image: cli-installer:latest
    environment:
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      UID: ${UID:-1000}
      GID: ${GID:-1000}

    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
      - ./aws.py:/app/aws.py:ro # Reload code in fly
      - ./aws_config.py:/app/aws_config.py:ro # Reload code in fly
      - ./github.py:/app/github.py:ro # Reload code in fly
      - ./logger.py:/app/logger.py:ro # Reload code in fly
      - ./validate.py:/app/validate.py:ro # Reload code in fly

      - ./mount_folder:/app/current_dir:rw # Folder where run docker-container
      - $HOME/.gitconfig:/home/cluster.dev/.gitconfig:ro # For get git username
      - $HOME/.ssh/:/home/cluster.dev/.ssh/:ro # For get ssh key as git password
      - $HOME/.aws/:/home/cluster.dev/.aws/:ro # For create user and attach permissions in AWS

      # When we commit something
      - $HOME/.gnupg/:/home/cluster.dev/.gnupg/:rw # For gpg sign used

    command: install
    # entrypoint: sh

#
# TESTS NON-INTERACTIVE
#

  tests:
    build:
      context: .
      dockerfile: tests.dockerfile
    image: cli-installer-tests:latest
    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
      - ./test_installer.py:/app/test_installer.py:ro # Reload code in fly


#
# TESTS INTERACTIVE
#

  test_base_empty: &test_base_empty
    <<: *app
    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
    user: root
    entrypoint: sh -c

  test_base_git_config: &test_base_git_config
    <<: *test_base_empty
    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
      - $HOME/.gitconfig:/home/cluster.dev/.gitconfig:ro # For get git username

  test_base_ssh: &test_base_ssh
    <<: *test_base_empty
    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
      - $HOME/.ssh:/home/cluster.dev/.ssh:ro # For get ssh key as git password

  test_base_gpg: &test_base_gpg
    <<: *test_base_empty
    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
      - $HOME/.gnupg/:/home/cluster.dev/.gnupg/:rw # For gpg sign used

  test_base_aws: &test_base_aws
    <<: *test_base_empty
    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
      - $HOME/.aws/:/home/cluster.dev/.aws/:ro # For create user and attach permissions in AWS

  test_base_full: &test_base_full
    <<: *test_base_empty
    volumes:
      - ./cluster_dev.py:/app/cluster_dev.py:ro # Reload code in fly
      - $HOME/.gitconfig:/home/cluster.dev/.gitconfig:ro # For get git username
      - $HOME/.ssh:/home/cluster.dev/.ssh:ro # For get ssh key as git password
      - $HOME/.gnupg/:/home/cluster.dev/.gnupg/:rw # For gpg sign used
      - $HOME/.aws/:/home/cluster.dev/.aws/:ro # For create user and attach permissions in AWS


# TODO: Create case with empty git config (username)
  mount_only_current_dir:
    <<: *test_base_empty
    command: >
      "
      mkdir current_dir && chown 1000:1000 current_dir && su cluster.dev -c \"
      python cluster_dev.py install
      \""

  without_repo:
    <<: *test_base_full
    command: >
      "
      mkdir current_dir && chown 1000:1000 current_dir && su cluster.dev -c \"
      python cluster_dev.py install
      \""


  empty_repo:
    <<: *test_base_full
    command: >
      "
      mkdir current_dir && chown 1000:1000 current_dir && su cluster.dev -c \"
      cd current_dir &&
        git init &&
        cd - &&
      python cluster_dev.py install
      \""


  non_empty_repo:
    <<: *test_base_full
    command: >
      "
      mkdir current_dir && chown 1000:1000 current_dir && su cluster.dev -c \"
      cd current_dir &&
        git init &&
        touch file &&
        git add . &&
        git commit -m 'Init commit' &&
        cd - &&
      python cluster_dev.py install
      \""


  cloned_ssh_empty_repo:
    <<: *test_base_full
    command: >
      "
      mkdir current_dir && chown 1000:1000 current_dir && su cluster.dev -c \"
      cd current_dir &&
        git init &&
        git remote add origin git@github.com:shalb/cluster.dev.git
        cd - &&
      python cluster_dev.py install
      \""

  cloned_https_empty_repo:
    <<: *test_base_full
    command: >
      "
      mkdir current_dir && chown 1000:1000 current_dir && su cluster.dev -c \"
      cd current_dir &&
        git init &&
        git remote add origin https://github.com/shalb/cluster.dev.git
        cd - &&
      python cluster_dev.py install
      \""
